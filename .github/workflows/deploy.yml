name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build --no-cache -t ${{ secrets.DOCKER_IMAGE_NAME }} .

    - name: Push Docker image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

    - name: Set up SSH Agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to DigitalOcean
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
          set -e
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker stop portfolio || true
          docker rm portfolio || true
          docker run -d --name portfolio -p 8080:5000 \
            --env SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --env RECAPTCHA_PUBLIC_KEY=${{ secrets.RECAPTCHA_PUBLIC_KEY }} \
            --env RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }} \
            --env MAIL_SERVER=${{ secrets.MAIL_SERVER }} \
            --env MAIL_PORT=${{ secrets.MAIL_PORT }} \
            --env MAIL_USE_TLS=${{ secrets.MAIL_USE_TLS }} \
            --env MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            --env MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker ps
        EOF

    - name: Verify Deployment
      run: |
        sleep 10
        curl -f http://${{ secrets.SERVER_IP }}:8080 || exit 1
