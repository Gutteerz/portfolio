name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build --no-cache -t my-portfolio .

    - name: Push Docker image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker tag my-portfolio:latest ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest

    - name: Deploy to DigitalOcean
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
          set -e
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
          docker ps -aq --filter "name=portfolio" | xargs --no-run-if-empty docker rm -f
          docker run -d --name portfolio -p 8080:5000 --env-file /root/.env ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
          # Debugging deployed container
          docker exec -it portfolio ls -l /app/static
          docker exec -it portfolio ls -l /app/static/css
          docker exec -it portfolio ls -l /app/static/js
        EOF
