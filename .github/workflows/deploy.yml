name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Test the Flask app (Optional)
    #- name: Run Tests
    #  run: |
        # Add your test commands here, e.g.:
    #    python -m unittest discover -s tests

    # Step 5: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t my-portfolio .

    # Step 6: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker tag my-portfolio:latest ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest

    # Step 7: Deploy to DigitalOcean
    - name: Deploy to DigitalOcean
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
          docker stop portfolio || true
          docker rm portfolio || true
          docker run -d --name portfolio -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/my-portfolio:latest
        EOF
